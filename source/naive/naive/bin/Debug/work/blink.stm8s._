include targets/stm8s003._

//
// classical 'blink' 31 bytes length
// no external quarz, use hsi
//

define led	3

// interrupt vectors
interrupt reset@0x8000: (f32) {0x82000000+start} 	// set reset vector to start of flash
// other interrupt vectors no needed for primitive blink

// procedure
delay60k:                                      	 	// 65530 tacts delay
        x = #65530
delay60local: 
        x--  
        if z==0 delay60local 
        ret

// main block
start:                                            	// default entry point (see interrupt vectors in stm8s._) 
        x = #ramend; sp = x                       	// initialise stack pointer (it is assembler!!!)

        gpioa ddr#led = #1                           	// for output     
        gpioa cr1#led = #1                           	// set push-pull

loop:   call near delay60k              	   	// call delay
	! gpioa odr#led     			   	// invert led
        go near loop                               	// next...
 


