ifndef stm8l
define stm8l

// factory conversion

vrefint conv@0x4910: (u8) ; ts conv: (u8)

// ports

gpioa odr@0x5000: (u8); gpioa idr: (u8); gpioa ddr: (u8); gpioa cr1: (u8); gpioa cr2: (u8)
gpiob odr: (u8); gpiob idr: (u8); gpiob ddr: (u8); gpiob cr1: (u8); gpiob cr2: (u8)
gpioc odr: (u8); gpioc idr: (u8); gpioc ddr: (u8); gpioc cr1: (u8); gpioc cr2: (u8)
gpiod odr: (u8); gpiod idr: (u8); gpiod ddr: (u8); gpiod cr1: (u8); gpiod cr2: (u8)
gpioe odr: (u8); gpioe idr: (u8); gpioe ddr: (u8); gpioe cr1: (u8); gpioe cr2: (u8)
gpiof odr: (u8); gpiof idr: (u8); gpiof ddr: (u8); gpiof cr1: (u8); gpiof cr2: (u8)
gpiog odr: (u8); gpiog idr: (u8); gpiog ddr: (u8); gpiog cr1: (u8); gpiog cr2: (u8)
gpioh odr: (u8); gpioh idr: (u8); gpioh ddr: (u8); gpioh cr1: (u8); gpioh cr2: (u8)
gpioi odr: (u8); gpioi idr: (u8); gpioi ddr: (u8); gpioi cr1: (u8); gpioi cr2: (u8)

flash cr1@0x5050: (u8); flash cr2: (u8); flash pukr@0x5062: (u8); flash dukr@0x5064: (u8); flash iapsr: (u8)

dma1 gcsr@0x5070: (u8); dma1 gir1: (u8); 
dma1 c0cr@0x5075: (u8); dma1 c0spr: (u8); dma1 c0ndtr: (u8); dma1 c0parh: (u8); dma1 c0parl: (u8); dma1 c0m0arh@0x507b: (u8); dma1 c0m0arl: (u8)
dma1 c1cr@0x507f: (u8); dma1 c1spr: (u8); dma1 c1ndtr: (u8); dma1 c1parh: (u8); dma1 c1parl: (u8); dma1 c1m0arh@0x5085: (u8); dma1 c1m0arl: (u8)
dma1 c2cr@0x5089: (u8); dma1 c2spr: (u8); dma1 c2ndtr: (u8); dma1 c2parh: (u8); dma1 c2parl: (u8); dma1 c2m0arh@0x508f: (u8); dma1 c2m0arl: (u8)
dma1 c3cr@0x5093: (u8); dma1 c3spr: (u8); dma1 c3ndtr: (u8); dma1 c3parh: (u8); dma1 c3parl: (u8); dma1 c3m0ear: (u8); dma1 c3m0arh: (u8); dma1 c3m0arl: (u8)

syscfg rmpcr3@0x509d: (u8); syscfg rmpcr1: (u8); syscfg rmpcr2: (u8)

itc exti cr1@0x50a0: (u8); itc exti cr2: (u8); itc exti cr3: (u8); itc exti sr1: (u8); itc exti sr2: (u8)
itc exti conf1: (u8); itc exti cr4@0x50aa: (u8); itc exti conf2: (u8)

wfe cr1@0x50a6: (u8); wfe cr2: (u8); wfe cr3: (u8); wfe cr4: (u8)

rst cr@0x50b0: (u8); rst sr: (u8)

pwr csr1@0x50b2: (u8); pwr csr2: (u8)

clk ckdivr@0x50c0: (u8); clk crtcr: (u8); clk ickcr: (u8); clk pckenr1: (u8); clk pckenr2: (u8)
clk ccor: (u8); clk eckcr: (u8); clk scsr: (u8); clk swr: (u8); clk swcr: (u8); clk cssr: (u8);
clk cbeepr: (u8); clk hsicalr: (u8); clk hsitrimr: (u8); clk hsiunlckr: (u8); clk regcsr: (u8); clk pckenr3: (u8);

wwdg cr@0x50d3: (u8); wwdg wr: (u8)

iwdg kr@0x50e0: (u8); iwdg pr: (u8);  iwdg rlr: (u8)

beep csr1@0x50f0: (u8); beep csr2@0x50f3: (u8)

rtc tr1@0x5140: (u8); rtc tr2: (u8); rtc tr3: (u8); rtc dr1@0x5144: (u8); rtc dr2: (u8); rtc dr3: (u8)
rtc cr1@0x5148: (u8); rtc cr2: (u8); rtc cr3: (u8); rtc isr1@0x514c: (u8); rtc isr2: (u8)
rtc sprerh@0x5150: (u8); rtc sprerl: (u8); rtc aprer: (u8); rtc wutrh@0x5154: (u8); rtc wutrl: (u8)
rtc ssrl@0x5157: (u8); rtc ssrh: (u8); rtc wpr: (u8); rtc shiftrh: (u8); rtc shiftrl: (u8); rtc alrmar1: (u8)
rtc alrmar2: (u8); rtc alrmar3: (u8); rtc alrmar4: (u8); rtc alrmassrh@0x5164: (u8); rtc alrmassrl: (u8)
rtc alrmassmskr: (u8); rtc calrh@0x516a: (u8); rtc calrl: (u8); rtc tcr1: (u8); rtc tcr2: (u8)

csslse csr@0x5190: (u8)

spi1 cr1@0x5200: (u8); spi1 cr2: (u8); spi1 icr: (u8); spi1 sr: (u8); spi1 dr: (u8); spi1 crcpr: (u8)
spi1 rxcrcr: (u8); spi1 txcrcr: (u8)

i2c1 cr1@0x5210: (u8); i2c1 cr2: (u8); i2c1 freqr: (u8); i2c1 oarl: (u8); i2c1 oarh: (u8); i2c1 oarhdual: (u8); i2c1 dr: (u8)
i2c1 sr1: (u8); i2c1 sr2: (u8); i2c1 sr3: (u8); i2c1 itr: (u8); i2c1 ccrl: (u8); i2c1 ccrh: (u8); i2c1 triser: (u8); i2c1 pecr: (u8)

uart1 sr@0x5230: (u8); uart1 dr: (u8); uart1 brr1: (u8); uart1 brr2: (u8); uart1 cr1: (u8); uart1 cr2: (u8)
uart1 cr3: (u8); uart1 cr4: (u8); uart1 cr5: (u8); uart1 gtr: (u8); uart1 pscr: (u8)

tim2 cr1@0x5250: (u8); tim2 cr2: (u8); tim2 smcr: (u8); tim2 etr: (u8); tim2 der: (u8); tim2 ier: (u8)
tim2 sr1: (u8); tim2 sr2: (u8); tim2 egr: (u8); tim2 ccmr1: (u8); tim2 ccmr2: (u8); tim2 ccer1: (u8)
tim2 cntrh: (u8); tim2 cntrl: (u8); tim2 pscr: (u8); tim2 arrh: (u8); tim2 arrl: (u8); tim2 ccr1h: (u8)
tim2 ccr1l: (u8); tim2 ccr2h: (u8); tim2 ccr2l: (u8); tim2 bkr: (u8); tim2 oisr: (u8)

tim3 cr1@0x5280: (u8); tim3 cr2: (u8); tim3 smcr: (u8); tim3 etr: (u8); tim3 der: (u8); tim3 ier: (u8)
tim3 sr1: (u8); tim3 sr2: (u8); tim3 egr: (u8); tim3 ccmr1: (u8); tim3 ccmr2: (u8); tim3 ccer1: (u8)
tim3 cntrh: (u8); tim3 cntrl: (u8); tim3 pscr: (u8); tim3 arrh: (u8); tim3 arrl: (u8); tim3 ccr1h: (u8)
tim3 ccr1l: (u8); tim3 ccr2h: (u8); tim3 ccr2l: (u8); tim3 bkr: (u8); tim3 oisr: (u8)

tim1 cr1@0x52b0: (u8); tim1 cr2: (u8); tim1 smcr: (u8); tim1 etr: (u8); tim1 der: (u8); tim1 ier: (u8)
tim1 sr1: (u8); tim1 sr2: (u8); tim1 egr: (u8); tim1 ccmr1: (u8); tim1 ccmr2: (u8); tim1 ccmr3: (u8) 
tim1 ccmr4: (u8); tim1 ccer1: (u8); tim1 ccer2: (u8); tim1 cntrh: (u8); tim1 cntrl: (u8); tim1 pscrh: (u8) 
tim1 pscrl: (u8); tim1 arrh: (u8); tim1 arrl: (u8); tim1 ccr1h: (u8); tim1 ccr1l: (u8); tim1 ccr2h: (u8) 
tim1 ccr2l: (u8); tim1 ccr3h: (u8); tim1 ccr3l: (u8); tim1 ccr4h: (u8); tim1 ccr4l: (u8); tim1 bkr: (u8) 
tim1 dtr: (u8); tim1 oisr: (u8); tim1 dcr1: (u8); tim1 dcr2: (u8); tim1 dma1r: (u8)

tim4 cr1@0x52e0: (u8); tim4 cr2: (u8); tim4 smcr: (u8); tim4 der: (u8); tim4 ier: (u8)
tim4 sr1: (u8); tim4 egr: (u8); tim4 cntr: (u8); tim4 pscr: (u8); tim4 arr: (u8)

irtim cr@0x52ff: (u8)

tim5 cr1@0x5300: (u8); tim5 cr2: (u8); tim5 smcr: (u8); tim5 etr: (u8); tim5 der: (u8); tim5 ier: (u8)
tim5 sr1: (u8); tim5 sr2: (u8); tim5 egr: (u8); tim5 ccmr1: (u8); tim5 ccmr2: (u8); tim5 ccer1: (u8)
tim5 cntrh: (u8); tim5 cntrl: (u8); tim5 pscr: (u8); tim5 arrh: (u8); tim5 arrl: (u8); tim5 ccr1h: (u8)
tim5 ccr1l: (u8); tim5 ccr2h: (u8); tim5 ccr2l: (u8); tim5 bkr: (u8); tim5 oisr: (u8)

adc1 cr1@0x5340: (u8); adc1 cr2: (u8); adc1 cr3: (u8); adc1 sr: (u8); adc1 drh: (u8); adc1 drl: (u8)
adc1 htrh: (u8); adc1 htrl: (u8); adc1 sqr1: (u8); adc1 sqr2: (u8); adc1 sqr3: (u8); adc1 sqr4: (u8)
adc1 trigr1: (u8); adc1 trigr2: (u8); adc1 trigr3: (u8); adc1 trigr4: (u8)

dac ch1cr1@0x5380: (u8); dac ch1cr2: (u8); dac ch2cr1: (u8); dac ch2cr2: (u8); dac swtrig: (u8); dac sr: (u8)
dac ch1rdhrh@0x5388: (u8); dac ch1rdhrl: (u8); dac ch1dhr8@0x5390: (u8); dac ch2rdhrh@0x5394: (u8); dac ch2rdhrl: (u8);
dac ch2ldhrh@0x5398: (u8); dac ch2ldhrl: (u8); dac ch2dhr8@0x539c: (u8); dac dch1rdhrh@0x53a0: (u8); dac dch1rdhrl: (u8);
dac dch2rdhrh: (u8); dac dch2rdhrl: (u8); dac dch1ldhrh: (u8); dac dch1ldhrl: (u8); dac dch2ldhrh: (u8); dac dch2ldhrl: (u8);
dac ch1dorh@0x53ac: (u8); dac ch1dorl: (u8); dac ch2dorh@0x53b0: (u8); dac ch2dorl: (u8)


spi2 cr1@0x53c0: (u8); spi2 cr2: (u8); spi2 icr: (u8); spi2 sr: (u8); spi2 dr: (u8); spi2 crcpr: (u8)
spi2 rxcrcr: (u8); spi2 txcrcr: (u8)

uart2 sr@0x53e0: (u8); uart2 dr: (u8); uart2 brr1: (u8); uart2 brr2: (u8); uart2 cr1: (u8); uart2 cr2: (u8)
uart2 cr3: (u8); uart2 cr4: (u8); uart2 cr5: (u8); uart2 gtr: (u8); uart2 pscr: (u8)

uart3 sr@0x53f0: (u8); uart3 dr: (u8); uart3 brr1: (u8); uart3 brr2: (u8); uart3 cr1: (u8); uart3 cr2: (u8)
uart3 cr3: (u8); uart3 cr4: (u8); uart3 cr5: (u8); uart3 gtr: (u8); uart3 pscr: (u8)

lcd cr1@0x5400: (u8); lcd cr2: (u8); lcd cr3: (u8); lcd frq: (u8); lcd pm0: (u8); lcd pm1: (u8); lcd pm2: (u8); lcd pm3: (u8)
lcd pm4: (u8); lcd pm5: (u8); lcd ram0@0x540c: (u8); lcd ram1: (u8); lcd ram2: (u8); lcd ram3: (u8)
lcd ram4: (u8); lcd ram5: (u8); lcd ram6: (u8); lcd ram7: (u8); lcd ram8: (u8); lcd ram9: (u8); lcd ram10: (u8)
lcd ram11: (u8); lcd ram12: (u8); lcd ram13: (u8); lcd ram14: (u8); lcd ram15: (u8); lcd ram16: (u8); lcd ram17: (u8)
lcd ram18: (u8); lcd ram19: (u8); lcd ram20: (u8); lcd ram21: (u8); lcd cr4@0x542f: (u8);

ri icr1@0x5430: (u8); ri icr2: (u8); ri ioir1: (u8); ri ioir2: (u8); ri ioir3: (u8); ri iocmr1: (u8); ri iocmr2: (u8); ri iocmr3: (u8)
ri iosr1: (u8); ri iosr2: (u8); ri iosr3: (u8); ri iogcr: (u8); ri ascr1: (u8); ri ascr2: (u8); ri rcr: (u8)

comp csr1@5440: (u8); comp csr2: (u8); comp csr3: (u8); comp csr4: (u8); comp csr5: (u8)

// debug

cpu a@0x7f00: (u8); cpu pce: (u8); cpu pch: (u8); cpu pcl: (u8); cpu xh: (u8); cpu xl: (u8)
cpu yh: (u8); cpu yl: (u8); cpu sph: (u8); cpu spl: (u8); cpu ccr: (u8); cpu gcr@0x7f60: (u8)

itc spr1@0x7f70: (u8); itc spr2: (u8); itc spr3: (u8); itc spr4: (u8); itc spr5: (u8); itc spr6: (u8)
itc spr7: (u8); itc spr8: (u8)

swim csr@0x7f80: (u8);

dm bk1re@0x7f90: (u8); dm bk1rh: (u8); dm bk1rl: (u8); dm bk2re: (u8); dm bk2rh: (u8); dm bk2rl: (u8)
dm cr1: (u8); dm cr2: (u8); dm csr1: (u8); dm csr2: (u8); dm enfctr: (u8);

// chip id

unicid x@0x4926: (u16); unicid y: (u16); unicid wafer: (u8); unicid lot0: (u8); unicid lot1: (u8);
unicid lot2: (u8); unicid lot3: (u8); unicid lot4: (u8); unicid lot5: (u8); unicid lot6: (u8);

// option bytes

option opt0@0x4800: (u8); option opt1: (u8); option opt2: (u8); option opt3: (u8); option opt4: (u8)
option opt5: (u8); option optbl: (u16)


endif
